name: Continuous Delivery

on:
  push:
    branches:
      - main

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Release
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          command: manifest

  dependencies:
    name: Install Dependencies
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: cd-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cd-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

  build:
    name: Build
    needs: dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - whatislove-dev
    env:
      PACKAGE_DIR: packages/${{ matrix.project }}
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Restore Dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: cd-${{ hashFiles('**/package-lock.json') }}

      - name: Code Building
        working-directory: ${{ env.PACKAGE_DIR }}
        run: npm run build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project }}
          path: ${{ env.PACKAGE_DIR }}/build

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - whatislove-dev
    environment:
      name: ${{ matrix.project }}
      url: ${{ fromJson(steps.deployment.outputs.NETLIFY_OUTPUT).url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.project }}
          path: build

      - name: Deploy
        id: deployment
        uses: South-Paw/action-netlify-cli@v2
        with:
          args: 'deploy --json --prod --site ${{ matrix.project }} --dir build'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
